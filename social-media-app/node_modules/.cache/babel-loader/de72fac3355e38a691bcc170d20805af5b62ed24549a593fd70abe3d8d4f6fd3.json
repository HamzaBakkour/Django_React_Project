{"ast":null,"code":"//src/helprers/axios.js\nimport axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nimport { getAccessToken, getRefreshToken, getUser } from \"../hooks/user.actions\";\nconst axiosService = axios.create({\n  baseURL: \"http://localhost:8000/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\naxiosService.interceptors.request.use(async config => {\n  /**\r\n  * Retrieving the access and refresh tokens from the local storage\r\n  */\n  config.headers.Authorization = `Bearer ${getAccessToken()}`;\n  return config;\n});\naxiosService.interceptors.response.use(res => Promise.resolve(res), err => Promise.reject(err));\nconst refreshAuthLogic = async failedRequest => {\n  return axios.post(\"/auth/refresh/\", {\n    refresh: getRefreshToken()\n  }, {\n    baseURL: \"http://localhost:8000/api\"\n  }).then(resp => {\n    const {\n      access\n    } = resp.data;\n    failedRequest.response.config.headers[\"Authorization\"] = \"Bearer \" + access;\n    localStorage.setItem(\"auth\", JSON.stringify({\n      access,\n      refresh: getRefreshToken(),\n      user: getUser()\n    }));\n  }).catch(() => {\n    localStorage.removeItem(\"auth\");\n  });\n};\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\nexport function fetcher(url) {\n  return axiosService.get(url).then(res => res.data);\n}\nexport default axiosService;","map":{"version":3,"names":["axios","createAuthRefreshInterceptor","getAccessToken","getRefreshToken","getUser","axiosService","create","baseURL","headers","interceptors","request","use","config","Authorization","response","res","Promise","resolve","err","reject","refreshAuthLogic","failedRequest","post","refresh","then","resp","access","data","localStorage","setItem","JSON","stringify","user","catch","removeItem","fetcher","url","get"],"sources":["C:/Users/alexa/OneDrive/Programming/FULL_STACK_DJANGO_AND_REACT/Chapter_1/social-media-app/src/helpers/axios.js"],"sourcesContent":["//src/helprers/axios.js\r\nimport axios from \"axios\";\r\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\r\nimport { getAccessToken, getRefreshToken, getUser,}\r\n    from \"../hooks/user.actions\";\r\n\r\n\r\n\r\nconst axiosService = axios.create({\r\n    baseURL: \"http://localhost:8000/api\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\n\r\naxiosService.interceptors.request.use(async (config) => {\r\n    /**\r\n   * Retrieving the access and refresh tokens from the local storage\r\n   */\r\n    config.headers.Authorization = `Bearer ${getAccessToken()}`;\r\n    return config;\r\n});\r\n\r\n\r\n\r\naxiosService.interceptors.response.use(\r\n    (res) => Promise.resolve(res),\r\n    (err) => Promise.reject(err)\r\n);\r\n\r\n\r\n\r\nconst refreshAuthLogic = async (failedRequest) => {\r\n    return axios\r\n        .post(\"/auth/refresh/\",\r\n                { refresh: getRefreshToken(),},\r\n                { baseURL: \"http://localhost:8000/api\",})\r\n\r\n        .then((resp) => {\r\n            const { access } = resp.data;\r\n            failedRequest.response.config.headers[\"Authorization\"] =\r\n                \"Bearer \" + access;\r\n            localStorage.setItem(\r\n                \"auth\",\r\n                JSON.stringify({ \r\n                    access, refresh: getRefreshToken(), user: getUser() }));\r\n            })\r\n        .catch(() => {\r\n            localStorage.removeItem(\"auth\");});\r\n};\r\n\r\n\r\ncreateAuthRefreshInterceptor(axiosService, refreshAuthLogic);\r\n\r\nexport function fetcher(url) {\r\n    return axiosService.get(url).then((res) => res.data);\r\n}\r\n\r\n\r\nexport default axiosService;\r\n\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,4BAA4B,MAAM,oBAAoB;AAC7D,SAASC,cAAc,EAAEC,eAAe,EAAEC,OAAO,QACxC,uBAAuB;AAIhC,MAAMC,YAAY,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC9BC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAGFH,YAAY,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,MAAOC,MAAM,IAAK;EACpD;AACJ;AACA;EACIA,MAAM,CAACJ,OAAO,CAACK,aAAa,GAAI,UAASX,cAAc,CAAC,CAAE,EAAC;EAC3D,OAAOU,MAAM;AACjB,CAAC,CAAC;AAIFP,YAAY,CAACI,YAAY,CAACK,QAAQ,CAACH,GAAG,CACjCI,GAAG,IAAKC,OAAO,CAACC,OAAO,CAACF,GAAG,CAAC,EAC5BG,GAAG,IAAKF,OAAO,CAACG,MAAM,CAACD,GAAG,CAC/B,CAAC;AAID,MAAME,gBAAgB,GAAG,MAAOC,aAAa,IAAK;EAC9C,OAAOrB,KAAK,CACPsB,IAAI,CAAC,gBAAgB,EACd;IAAEC,OAAO,EAAEpB,eAAe,CAAC;EAAE,CAAC,EAC9B;IAAEI,OAAO,EAAE;EAA4B,CAAC,CAAC,CAEhDiB,IAAI,CAAEC,IAAI,IAAK;IACZ,MAAM;MAAEC;IAAO,CAAC,GAAGD,IAAI,CAACE,IAAI;IAC5BN,aAAa,CAACP,QAAQ,CAACF,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAClD,SAAS,GAAGkB,MAAM;IACtBE,YAAY,CAACC,OAAO,CAChB,MAAM,EACNC,IAAI,CAACC,SAAS,CAAC;MACXL,MAAM;MAAEH,OAAO,EAAEpB,eAAe,CAAC,CAAC;MAAE6B,IAAI,EAAE5B,OAAO,CAAC;IAAE,CAAC,CAAC,CAAC;EAC/D,CAAC,CAAC,CACL6B,KAAK,CAAC,MAAM;IACTL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;EAAC,CAAC,CAAC;AAC9C,CAAC;AAGDjC,4BAA4B,CAACI,YAAY,EAAEe,gBAAgB,CAAC;AAE5D,OAAO,SAASe,OAAOA,CAACC,GAAG,EAAE;EACzB,OAAO/B,YAAY,CAACgC,GAAG,CAACD,GAAG,CAAC,CAACZ,IAAI,CAAET,GAAG,IAAKA,GAAG,CAACY,IAAI,CAAC;AACxD;AAGA,eAAetB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}